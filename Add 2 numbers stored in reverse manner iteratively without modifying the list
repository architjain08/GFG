/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    
    
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        if(l1==NULL&&l2==NULL)
        return NULL;
        
        ListNode *dummy = new ListNode(-1);
        dummy->next = NULL;
        
        ListNode *tail =  dummy;
        
        int sum  = 0;
        int carry = 0;
        while(l1!=NULL&&l2!=NULL)
        {
            sum = (l1->val + l2->val) + carry;
            
            tail->next = new ListNode(sum%10);
            tail = tail->next;
            carry =  sum/10;
            l1 = l1->next;
            l2 = l2->next;
        }
        
        while(l1!=NULL)
        {
            sum = (l1->val) + carry;
            tail->next = new ListNode(sum%10);
            tail = tail->next;
            carry = sum/10;
            l1 = l1->next;
        }
        
        while(l2!=NULL)
        {
            sum = (l2->val) + carry;
            tail->next = new ListNode(sum%10);
            tail = tail->next;
            carry = sum/10;
            l2 = l2->next;
        }
        
        if(carry!=0)
        {
            tail->next = new ListNode(carry);
            tail = tail->next;
        }
        return dummy->next;
    }
};
