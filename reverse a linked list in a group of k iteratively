#include<bits/stdc++.h>
using namespace std;

struct node
{
    int data;
    node *next;
};

node *newNode(int d)
{
    node *temp = new node;
    temp->data = d;
    temp->next = NULL;
    return temp;
}

void push(node **head,int v)
{
    if(*head==NULL)
    {
        *head = newNode(v);
        return;
    }
    node *temp = newNode(v);
    temp->next = *head;
    *head = temp;
}

node *rev(node *head,node *tail,node **last)
{
    if(head==NULL||head==tail||head->next==tail)
    {
        *last = head;
        return head;
    }
    node *store = head->next;
    node *temp = rev(head->next,tail,last);
    store->next  = head;
    head->next = NULL;
    *last = head;
    return temp;
}

void revK(node **head,int k)
{
    if(*head==NULL||(*head)->next==NULL)
        return;
    if(k<=1)
        return;

    push(head,-1);
    node *prev = *head;

    node *curr = prev->next;

    while(curr!=NULL)
    {
        node *tail = curr;
        for(int count = 1;count<=k&&tail!=NULL;count++)
        tail = tail->next;

        node *last = NULL;

        if(tail==NULL)
        {
            prev->next = rev(curr,tail,&last);
            last->next = NULL;
            break;
        }
        prev->next = rev(curr,tail,&last);
        last->next = tail;
        curr = tail;
        prev = last;
    }
    prev = *head;
    *head = (*head)->next;
    delete(prev);
}

void printList(struct node *node)
{
    while(node != NULL)
    {
        printf("%d ", node->data);
        node = node->next;
    }
}
int main()
{
    struct node *start = NULL;

    /* The constructed linked list is:
     1->2->3->4->5->6->7->8 */
    push(&start, 8);
    push(&start, 7);
    push(&start, 6);
    push(&start, 5);
    push(&start, 4);
    push(&start, 3);
    push(&start, 2);
    push(&start, 1);

    printf("\n Linked list before calling  pairWiseSwap() ");
    printList(start);

    revK(&start,5);

    printf("\n Linked list after calling  pairWiseSwap() ");
    printList(start);

    getchar();
    return 0;
}
