#include<bits/stdc++.h>
using namespace std;

struct node
{
    int data;
    node *left;
    node *right;
};

node *newNode(int d)
{
    node *temp = new node;
    temp->left = NULL;
    temp->right = NULL;
    temp->data = d;
    return temp;
}

node *del(node *root,int k)
{
    if(root==NULL)return NULL;

    root->left = del(root->left,k - 1);
    root->right =del(root->right,k - 1);

    if(root->left==NULL && root->right==NULL)
    {
        if(1< k)
        {
            delete(root);
            return NULL;
        }
    }
    return root;
}


void print(struct node *root)
{
    if (root != NULL)
    {
        print(root->left);
        printf("%d ",root->data);
        print(root->right);
    }
}

int main()
{
    int k = 4;
    node *root = newNode(1);
    root->left = newNode(2);
    root->right = newNode(3);
    root->left->left = newNode(4);
    root->left->right = newNode(5);
    root->left->left->left = newNode(7);
    root->right->right = newNode(6);
    root->right->right->left = newNode(8);
    cout << "Inorder Traversal of Original tree" << endl;
    print(root);
    cout << endl;
    cout << "Inorder Traversal of Modified tree" << endl;
    node *res = del(root, k);
    print(res);
    return 0;
}
