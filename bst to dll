#include<bits/stdc++.h>
using namespace std;


struct node
{
    int data;
    node *next;
    node *prev;
};

node *newNode(int v)
{
    node *temp = new node;
    temp->data = v;
    temp->prev = NULL;
    temp->next = NULL;
    return temp;
}

node* insert(node* root, int key)
{
    if (root == NULL)
       return newNode(key);
    if (root->data > key)
       root->prev = insert(root->prev, key);
    else
       root->next = insert(root->next, key);
    return root;
}



void convertBSTtoDLL(node *root,node **head,node **tail)
{
    if(root==NULL)
        return;

    if(root->prev!=NULL)
    {
        convertBSTtoDLL(root->prev,head,tail);
        (*tail)->next = root;
        root->prev = *tail;
    }
    else
    {
        *head = root;
        (*head)->prev = NULL;
    }

    node *temp = NULL;
    if(root->next!=NULL){

    convertBSTtoDLL(root->next,&temp,tail);

    root->next = temp;
    (temp)->prev = root;
    }
    else
    {
        *tail = root;
        (*tail)->next = NULL;
    }
}

int main()
{
    node* root = NULL;

    root = insert(root, 1);
    root = insert(root, 2);
    root = insert(root, 3);
    root = insert(root, 4);
    root = insert(root, 5);
    root = insert(root, 6);
    root = insert(root, 7);

    node *head = NULL,*tail =NULL;
    convertBSTtoDLL(root,&head,&tail);

    while(head!=NULL)
    {
        cout<<head->data<<" ";
        head = head->next;
    }

    cout<<endl;


    return 0;
}
