/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    
    ListNode *update(ListNode *l1)
    {
            ListNode *head = l1;
            int sum = head->val;
            int carry = 0;
            ListNode *p = NULL;
            
            while(head!=NULL)
            {
                p = head;
                sum = head->val + carry;
                if(sum<=9)
                {
                    carry = 0;
                    head->val = sum;
                    break;
                }
                else
                {
                    carry = (sum)/10;
                    sum = sum%10;
                    head->val = sum;
                }
                head = head->next;
            }
            
            if(carry!=0)
            {
                p->next  = new ListNode(carry);
                p->next->next = NULL;
            }
                
            return l1;
        
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        if(l1==NULL&&l2==NULL)
        return NULL;
        if(l2==NULL)
           return update(l1);
        
        if(l1==NULL)
           return update(l2);
           
         int sum = l1->val + l2->val;
         if(sum<=9)
         {
             l1->val = sum;
             l1->next = addTwoNumbers(l1->next,l2->next);
             return l1;
         }
         else
         {
             l1->val = sum%10;
             if(l1->next==NULL)
             l1->next = new ListNode(sum/10);
             else
             l1->next->val += (sum/10);
             
             l1->next = addTwoNumbers(l1->next,l2->next);
             return l1;
         }
    }
};
